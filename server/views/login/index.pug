extends ../layout/index

block content
  .innerbody
    .spacer
    .auction
      .col-left
        .login
          h4 LOG IN
          .error#error_login
            |
          form.login-form(action="/login",method="POST")
            .form-group
              label
                input(type='email' placeholder='Email',name="email",required=true)
            .form-group
              label
                input(type='password' placeholder='Password',name="pass",required=true)
            br
            button.btn.btn-default.pull-right(type='submit') ⏎
          br
          a(href='#') I forgot my password
      //
          -
      .col-right
        .signup
          h4 REGISTER
          .error#error
            |
          form(action="/login",method="POST")
            input.next(type='text', placeholder='First Name',name="fname",required=true)
            input.next(type='text', placeholder="Last Name",name="lname",required=true)
            label
              input(type='number',placeholder="Telephone",name="phone",required=true)
            label
              input(type="text",placeholder="Address",name="address",required=true)
            label
              input(type="number",placeholder="Taxpayer ID",name="taxid",required=true)
            br
            .custom-select
              select#country(name='country')
                option(disable selected value) Country
                option(value='Greece') Greece
                option(value='Cyprus') Cyprus
                option(value='Other') Other
            .custom-select
              select#country(name ="gender", required=true)
                option(disable selected value) Gender
                option(value='Male') Male
                option(value='Female') Female
                option(value='Other') Other
            .custom-select
              select#country(name ="type", required=true)
                option(disable selected value) Account Type
                option(value='Bidder') Bidder
                option(value='Seller') Seller
            .form-group
              label
                input(type='email', placeholder='E-mail',name="signupemail",required=true)
            .form-group
              label
                input#pass(type='password',placeholder='Password',name="signuppass",required=true)
            .topalign
              .form-group
                label
                  input.nextmini#passconf(type='password',placeholder='Password Confirmation',name="signuppassconf",required=true)
                script.
                  var password = document.getElementById("pass")
                  , confirm_password = document.getElementById("passconf");
                  function validatePassword(){
                    if(password.value != confirm_password.value) {
                      confirm_password.setCustomValidity("Passwords Don't Match");
                    } else {
                      confirm_password.setCustomValidity('');
                    }
                  }
                  password.onchange = validatePassword;
                  confirm_password.onkeyup = validatePassword;
                button.btn.btn-default.pull-right(type='submit') ⏎
          br
          a(href='#') Terms of service
  .footer
    span
      a.a1(href='#') SITEMAP
    span
      a.a1(href='#') TERMS OF SERVICE
    span
      a.a1(href='#') OUR TEAM
    br
    span
      | Created by Charalampos Papa, Chrysostomos Rampidis and Charalampos Evagelatos, 2019. All rights reserved. For questions or additional information, 
      a.a2(href='mailto:sdi1400041@di.uoa.gr') contact us
  script.
    function geterror(){
      var str=window.location.href
      var pos = str.search("login");
      var res = str.substring(pos+5);
      if(res=="?signup=false/reason=invalidmail"){
        return "The e-mail you entered is invalid!"
      }
      else if(res=="?signup=false/reason=invalidphone"){
        return "The phone number you entered is invalid !"
      }
      else if(res=="?signup=false/reason=userexists"){
        return "The e-mail you entered is already in use !"
      }
      return "";
    }
    document.getElementById("error").textContent = geterror();
  script.
    function geterror_login(){
      var str=window.location.href
      var pos = str.search("login");
      var res = str.substring(pos+5);
      if(res=="?success=false/reason=invalidmail"){
        return "The e-mail you entered is invalid!"
      }
      else if(res=="?success=false/reason=userdoesnotexist"){
        return "The e-mail you entered doesn't correspond to any existing account !"
      }
      else if(res=="?success=false?reason=accountnotactivated"){
        return "Account not activated yet"
      }
      else if(res=="?success=false"){
        return "Password incorrect"
      }
      return "";
    }
    document.getElementById("error_login").textContent = geterror_login();
    //alert(geterror()); 
  script.
    var x, i, j, selElmnt, a, b, c;
    /*look for any elements with the class "custom-select":*/
    x = document.getElementsByClassName("custom-select");
    for (i = 0; i < x.length; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    /*for each element, create a new DIV that will act as the selected item:*/
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /*for each element, create a new DIV that will contain the option list:*/
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < selElmnt.length; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
    /*when an item is clicked, update the original select box,
    and the selected item:*/
    var y, i, k, s, h;
    s = this.parentNode.parentNode.getElementsByTagName("select")[0];
    h = this.parentNode.previousSibling;
    for (i = 0; i < s.length; i++) {
    if (s.options[i].innerHTML == this.innerHTML) {
    s.selectedIndex = i;
    h.innerHTML = this.innerHTML;
    y = this.parentNode.getElementsByClassName("same-as-selected");
    for (k = 0; k < y.length; k++) {
    y[k].removeAttribute("class");
    }
    this.setAttribute("class", "same-as-selected");
    break;
    }
    }
    h.click();
    });
    b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function(e) {
    /*when the select box is clicked, close any other select boxes,
    and open/close the current select box:*/
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
    this.classList.toggle("select-arrow-active");
    });
    }
    function closeAllSelect(elmnt) {
    /*a function that will close all select boxes in the document,
    except the current select box:*/
    var x, y, i, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
    arrNo.push(i)
    } else {
    y[i].classList.remove("select-arrow-active");
    }
    }
    for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
    x[i].classList.add("select-hide");
    }
    }
    }
    /*if the user clicks anywhere outside the select box,
    then close all select boxes:*/
    document.addEventListener("click", closeAllSelect);
  
